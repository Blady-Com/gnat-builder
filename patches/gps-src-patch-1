diff --git a/gps/gps.gpr b/gps/gps.gpr
index 009561a94d..69b6623245 100644
--- a/gps/gps.gpr
+++ b/gps/gps.gpr
@@ -18,7 +18,6 @@ with "../gvd/gvd";
 with "../help/help";
 with "../kernel/kernel";
 with "../keymanager/keymanager";
-with "../lal/lal";
 with "../memory_usage/memory_usage";
 with "../navigation/navigation";
 with "../prj_editor/prj_editor";
diff --git a/gps/src/gps-main.adb b/gps/src/gps-main.adb
index 0cf7d1c9f9..3c8f555532 100644
--- a/gps/src/gps-main.adb
+++ b/gps/src/gps-main.adb
@@ -164,7 +164,6 @@ with KeyManager_Module;
 with KeyManager_Module.Macros;
 with Toolchains_Module;
 with Ada_Semantic_Tree_Module;
-with LAL.Module;
 with Language_Handlers.Assistants;
 with Learn.Views;
 with Memory_Usage_Views.Module;
@@ -190,7 +189,6 @@ with VFS_Module;
 with Vdiff2_Module;
 with Vsearch;
 with Language.Libclang;
-with Ada_Semantic_Tree.Lang;
 with GPS.Traces;
 
 procedure GPS.Main is
@@ -2269,17 +2267,6 @@ procedure GPS.Main is
 
       Ada_Module.Register_Module (GPS_Main.Kernel);
 
-      LAL.Module.Register_Module
-        (GPS_Main.Kernel,
-         (LAL.Use_LAL_In_Editor  => Use_LAL_In_Editor.Get_Pref,
-          LAL.Use_LAL_In_Outline => Use_LAL_In_Outline.Get_Pref,
-          LAL.Use_LAL_In_Shell   => Use_LAL_In_Shell.Get_Pref,
-          LAL.Use_LAL_In_Info    => Use_LAL_In_Info.Get_Pref,
-          LAL.Use_LAL_In_GNATHUB => Use_LAL_In_GNATHUB.Get_Pref,
-          LAL.Use_LAL_In_COV     => Use_LAL_In_COV.Get_Pref,
-          LAL.Use_LAL_In_Indent  => Use_LAL_In_Indent.Get_Pref),
-         Legacy => Ada_Semantic_Tree.Lang.Ada_Tree_Lang);
-
       if Active (CPP_Trace) then
          Cpp_Module.Register_Module (GPS_Main.Kernel);
       end if;
diff --git a/python/src/python_module.adb b/python/src/python_module.adb
index 53e4e52298..594be9c203 100644
--- a/python/src/python_module.adb
+++ b/python/src/python_module.adb
@@ -18,7 +18,6 @@
 with Ada.Containers;
 with Ada.Unchecked_Conversion;
 
-with GNATCOLL.Arg_Lists;             use GNATCOLL.Arg_Lists;
 with GNATCOLL.Projects;              use GNATCOLL.Projects;
 with GNATCOLL.Python;                use GNATCOLL.Python;
 with GNATCOLL.Scripts;               use GNATCOLL.Scripts;
@@ -381,20 +380,6 @@ package body Python_Module is
                       Ignore_User_Config => False);
          end if;
       end loop;
-
-      declare
-         Errors : Boolean;
-         Script : constant Scripting_Language :=
-           Kernel.Scripts.Lookup_Scripting_Language (Python_Name);
-      begin
-         --  Now we are ready to import libadalang
-         Script.Execute_Command
-           (CL           => Create ("import libadalang"),
-            Hide_Output  => True,
-            Errors       => Errors);
-
-         pragma Assert (not Errors);
-      end;
    end Load_System_Python_Startup_Files;
 
    ------------------------------------
